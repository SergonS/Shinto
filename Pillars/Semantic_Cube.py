from Data_Types import Data_Types

class Semantic_Cube():

    cube = {
        "int": {
            "int": {
                "+": Data_Types.INT,
                "-": Data_Types.INT,
                "*": Data_Types.INT,
                "/": Data_Types.INT,
                "%": Data_Types.INT,
                "&&": Data_Types.INVALID,
                "||": Data_Types.INVALID,
                "=": Data_Types.INT,
                "==": Data_Types.BOOLEAN,
                "!=": Data_Types.BOOLEAN,
                ">=": Data_Types.BOOLEAN,
                ">": Data_Types.BOOLEAN,
                "<=": Data_Types.BOOLEAN,
                "<": Data_Types.BOOLEAN
            },
            "float": {
                "+": Data_Types.FLOAT,
                "-": Data_Types.FLOAT,
                "*": Data_Types.FLOAT,
                "/": Data_Types.FLOAT,
                "%": Data_Types.FLOAT,
                "&&": Data_Types.INVALID,
                "||": Data_Types.INVALID,
                "=": Data_Types.FLOAT,
                "==": Data_Types.BOOLEAN,
                "!=": Data_Types.BOOLEAN,
                ">=": Data_Types.BOOLEAN,
                ">": Data_Types.BOOLEAN,
                "<=": Data_Types.BOOLEAN,
                "<": Data_Types.BOOLEAN
            },
            "string": {
                "+": Data_Types.INT,
                "-": Data_Types.INT,
                "*": Data_Types.INT,
                "/": Data_Types.INT,
                "%": Data_Types.INT,
                "&&": Data_Types.INVALID,
                "||": Data_Types.INVALID,
                "=": Data_Types.INT,
                "==": Data_Types.BOOLEAN,
                "!=": Data_Types.BOOLEAN,
                ">=": Data_Types.BOOLEAN,
                ">": Data_Types.BOOLEAN,
                "<=": Data_Types.BOOLEAN,
                "<": Data_Types.BOOLEAN
            },
            "boolean": {
                "+": Data_Types.INVALID,
                "-": Data_Types.INVALID,
                "*": Data_Types.INVALID,
                "/": Data_Types.INVALID,
                "%": Data_Types.INVALID,
                "&&": Data_Types.INVALID,
                "||": Data_Types.INVALID,
                "=": Data_Types.INVALID,
                "==": Data_Types.INVALID,
                "!=": Data_Types.INVALID,
                ">=": Data_Types.INVALID,
                ">": Data_Types.INVALID,
                "<=": Data_Types.INVALID,
                "<": Data_Types.INVALID
            }
        },
        "float": {
            "int": {
                "+": Data_Types.INT,
                "-": Data_Types.INT,
                "*": Data_Types.INT,
                "/": Data_Types.INT,
                "%": Data_Types.INT,
                "&&": Data_Types.INVALID,
                "||": Data_Types.INVALID,
                "=": Data_Types.INT,
                "==": Data_Types.BOOLEAN,
                "!=": Data_Types.BOOLEAN,
                ">=": Data_Types.BOOLEAN,
                ">": Data_Types.BOOLEAN,
                "<=": Data_Types.BOOLEAN,
                "<": Data_Types.BOOLEAN
            },
            "float": {
                "+": Data_Types.FLOAT,
                "-": Data_Types.FLOAT,
                "*": Data_Types.FLOAT,
                "/": Data_Types.FLOAT,
                "%": Data_Types.FLOAT,
                "&&": Data_Types.INVALID,
                "||": Data_Types.INVALID,
                "=": Data_Types.FLOAT,
                "==": Data_Types.BOOLEAN,
                "!=": Data_Types.BOOLEAN,
                ">=": Data_Types.BOOLEAN,
                ">": Data_Types.BOOLEAN,
                "<=": Data_Types.BOOLEAN,
                "<": Data_Types.BOOLEAN
            },
            "string": {
                "+": Data_Types.INVALID,
                "-": Data_Types.INVALID,
                "*": Data_Types.INVALID,
                "/": Data_Types.INT,
                "%": Data_Types.INT,
                "&&": Data_Types.INVALID,
                "||": Data_Types.INVALID,
                "=": Data_Types.INVALID,
                "==": Data_Types.INVALID,
                "!=": Data_Types.INVALID,
                ">=": Data_Types.INVALID,
                ">": Data_Types.INVALID,
                "<=": Data_Types.INVALID,
                "<": Data_Types.INVALID
            },
            "boolean": {
                "+": Data_Types.INVALID,
                "-": Data_Types.INVALID,
                "*": Data_Types.INVALID,
                "/": Data_Types.INVALID,
                "%": Data_Types.INVALID,
                "&&": Data_Types.INVALID,
                "||": Data_Types.INVALID,
                "=": Data_Types.INVALID,
                "==": Data_Types.INVALID,
                "!=": Data_Types.INVALID,
                ">=": Data_Types.INVALID,
                ">": Data_Types.INVALID,
                "<=": Data_Types.INVALID,
                "<": Data_Types.INVALID
            }
        },
        "string": {
            "int": {
                "+": Data_Types.INVALID,
                "-": Data_Types.INVALID,
                "*": Data_Types.INVALID,
                "/": Data_Types.INVALID,
                "%": Data_Types.INVALID,
                "&&": Data_Types.INVALID,
                "||": Data_Types.INVALID,
                "=": Data_Types.INVALID,
                "==": Data_Types.INVALID,
                "!=": Data_Types.INVALID,
                ">=": Data_Types.INVALID,
                ">": Data_Types.INVALID,
                "<=": Data_Types.INVALID,
                "<": Data_Types.INVALID
            },
            "float": {
                "+": Data_Types.INVALID,
                "-": Data_Types.INVALID,
                "*": Data_Types.INVALID,
                "/": Data_Types.INVALID,
                "%": Data_Types.INVALID,
                "&&": Data_Types.INVALID,
                "||": Data_Types.INVALID,
                "=": Data_Types.INVALID,
                "==": Data_Types.INVALID,
                "!=": Data_Types.INVALID,
                ">=": Data_Types.INVALID,
                ">": Data_Types.INVALID,
                "<=": Data_Types.INVALID,
                "<": Data_Types.INVALID
            },
            "string": {
                "+": Data_Types.INVALID,
                "-": Data_Types.INVALID,
                "*": Data_Types.INVALID,
                "/": Data_Types.INVALID,
                "%": Data_Types.INVALID,
                "&&": Data_Types.INVALID,
                "||": Data_Types.INVALID,
                "=": Data_Types.STRING,
                "==": Data_Types.INVALID,
                "!=": Data_Types.BOOLEAN,
                ">=": Data_Types.INVALID,
                ">": Data_Types.INVALID,
                "<=": Data_Types.INVALID,
                "<": Data_Types.INVALID
            },
            "boolean": {
                "+": Data_Types.INVALID,
                "-": Data_Types.INVALID,
                "*": Data_Types.INVALID,
                "/": Data_Types.INVALID,
                "%": Data_Types.INVALID,
                "&&": Data_Types.INVALID,
                "||": Data_Types.BOOLEAN,
                "=": Data_Types.BOOLEAN,
                "==": Data_Types.BOOLEAN,
                "!=": Data_Types.BOOLEAN,
                ">=": Data_Types.INVALID,
                ">": Data_Types.INVALID,
                "<=": Data_Types.INVALID,
                "<": Data_Types.INVALID
            }
        },
        "boolean": {
            "int": {
                "+": Data_Types.INVALID,
                "-": Data_Types.INVALID,
                "*": Data_Types.INVALID,
                "/": Data_Types.INVALID,
                "%": Data_Types.INVALID,
                "&&": Data_Types.INVALID,
                "||": Data_Types.INVALID,
                "=": Data_Types.INVALID,
                "==": Data_Types.INVALID,
                "!=": Data_Types.INVALID,
                ">=": Data_Types.INVALID,
                ">": Data_Types.INVALID,
                "<=": Data_Types.INVALID,
                "<": Data_Types.INVALID
            },
            "float": {
                "+": Data_Types.INVALID,
                "-": Data_Types.INVALID,
                "*": Data_Types.INVALID,
                "/": Data_Types.INVALID,
                "%": Data_Types.INVALID,
                "&&": Data_Types.INVALID,
                "||": Data_Types.INVALID,
                "=": Data_Types.INVALID,
                "==": Data_Types.INVALID,
                "!=": Data_Types.INVALID,
                ">=": Data_Types.INVALID,
                ">": Data_Types.INVALID,
                "<=": Data_Types.INVALID,
                "<": Data_Types.INVALID
            },
            "string": {
                "+": Data_Types.INVALID,
                "-": Data_Types.INVALID,
                "*": Data_Types.INVALID,
                "/": Data_Types.INVALID,
                "%": Data_Types.INVALID,
                "&&": Data_Types.INVALID,
                "||": Data_Types.INVALID,
                "=": Data_Types.INVALID,
                "==": Data_Types.INVALID,
                "!=": Data_Types.INVALID,
                ">=": Data_Types.INVALID,
                ">": Data_Types.INVALID,
                "<=": Data_Types.INVALID,
                "<": Data_Types.INVALID
            },
            "boolean": {
                "+": Data_Types.INVALID,
                "-": Data_Types.INVALID,
                "*": Data_Types.INVALID,
                "/": Data_Types.INVALID,
                "%": Data_Types.INVALID,
                "&&": Data_Types.INVALID,
                "||": Data_Types.BOOLEAN,
                "=": Data_Types.BOOLEAN,
                "==": Data_Types.BOOLEAN,
                "!=": Data_Types.BOOLEAN,
                ">=": Data_Types.INVALID,
                ">": Data_Types.INVALID,
                "<=": Data_Types.INVALID,
                "<": Data_Types.INVALID
            }
        }
    }

    def operation_return(self, operatorA: str, operatorB: str, operation: str) -> str:
        return self.cube[operatorA][operatorB][operation].value